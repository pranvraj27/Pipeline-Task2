pipeline {
    agent any

    environment {
        RECIPIENT_EMAIL = 'pranav27rajans@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Task: Build the application'
                echo 'Tool: Node.js'
                sleep time: 10, unit: 'SECONDS'
            }
        }
        stage('Run Unit and Integration Tests') {
            steps {
                echo 'Task: Run Unit and Integration Tests'
                echo 'Tool: npm (Jest for unit tests)'
                sleep time: 10, unit: 'SECONDS'
            }
            post {
                always {
                    script {
                        sendEmail('Run Unit and Integration Tests')
                    }
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Task: Perform Code Analysis'
                echo 'Tool: ESLint'
                sleep time: 10, unit: 'SECONDS'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Task: Perform Security Scan'
                echo 'Tool: npm audit'
                sleep time: 10, unit: 'SECONDS'
            }
            post {
                always {
                    script {
                        sendEmail('Security Scan')
                    }
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Task: Deploy to Staging Environment'
                echo 'Tool: SCP (Secure Copy Protocol)'
                sleep time: 10, unit: 'SECONDS'
            }
        }
        stage('Run Integration Tests on Staging') {
            steps {
                echo 'Task: Run Integration Tests on Staging'
                echo 'Tool: npm (Jest for integration tests)'
                sleep time: 10, unit: 'SECONDS'
            }
        }
        stage('Approval for Production Deployment') {
            steps {
                echo 'Task: Request Manual Approval for Production Deployment'
                echo 'Tool: Jenkins Manual Input Step'
                sleep time: 10, unit: 'SECONDS'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Task: Deploy to Production Environment'
                echo 'Tool: SCP (Secure Copy Protocol)'
                sleep time: 10, unit: 'SECONDS'
            }
        }
    }

    post {
        always {
            echo 'Task: Send Build Notifications'
            echo 'Tools: Email'
        }
    }
}

def sendEmail(stageName) {
    emailext (
        subject: "Jenkins Pipeline: ${stageName} Stage ${currentBuild.currentResult}",
        body: "The ${stageName} stage in Jenkins build ${env.BUILD_NUMBER} finished with status: ${currentBuild.currentResult}. Please see the attached logs for details.",
        to: "${env.RECIPIENT_EMAIL}",
        attachLog: true
    )
}
