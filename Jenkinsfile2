pipeline {
    agent any

    environment {
        NODE_VERSION = '14.x'
        EMAIL_RECIPIENTS = 'pranav27rajans@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the project...'
                echo 'Using Node.js version: $NODE_VERSION'
                echo 'Installing dependencies...'
                echo 'Running build process...'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests...'
                echo 'Running integration tests...'
            }
            post {
                always {
                    echo 'Collecting test results...'
                }
                failure {
                    mail to: "$EMAIL_RECIPIENTS",
                         subject: "Build Failed - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                         body: "Build failed in stage: ${env.STAGE_NAME}"
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                echo 'Running ESLint...'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                echo 'Running npm audit...'
                echo 'Generating security report...'
            }
            post {
                always {
                    echo 'Archiving security scan report...'
                    mail to: "$EMAIL_RECIPIENTS",
                         subject: "Security Scan Completed - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                         body: "Security scan completed in stage: ${env.STAGE_NAME}. See the attached report.",
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production environment...'
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed. Sending final status email...'
            emailext (
                to: "${EMAIL_RECIPIENTS}",
                subject: "Pipeline Status: ${currentBuild.currentResult}",
                body: "The pipeline ${env.JOB_NAME} - build ${env.BUILD_NUMBER} has finished with status ${currentBuild.currentResult}.",
                attachLog: true // Attach build log
            )
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Build succeeded. Sending success email...'
            mail to: "$EMAIL_RECIPIENTS",
                 subject: "Build Succeeded - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Build succeeded!"
        }
        failure {
            echo 'Build failed. Sending failure email...'
            mail to: "$EMAIL_RECIPIENTS",
                 subject: "Build Failed - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Build failed!"
        }
    }
}
